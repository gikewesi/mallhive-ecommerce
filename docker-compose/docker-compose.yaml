version: "3.9"

services:
  user-service:
    container_name: user-service
    build:
      context: ./mallhive-ecommerce/micro-services/user-service
      dockerfile: ./mallhive-ecommerce/docker/microservices/user.dockerfile
    env_file:
      - ./mallhive-ecommerce/micro-services/user-service/.env
    ports:
      - "4600:4001"
    depends_on:
      - user-db
    restart: always
    networks:
      - user-net

  user-db:
    image: postgres:15
    container_name: user-db
    env_file:
      - ./mallhive-ecommerce/docker-compose/env/user-db.env
    ports:
      - "5430:5432"
    volumes:
      - user_pgdata:/var/lib/postgresql/data
    networks:
      - user-net

  order-service:
    container_name: order-service
    build:
      context: ./mallhive-ecommerce/micro-services/order-service
      dockerfile: Dockerfile
    env_file:
      - ./mallhive-ecommerce/micro-services/order-service/.env
    ports:
      - "4200:4002"
    depends_on:
      - order-db
    restart: always
    networks:
      - order-net

  order-db:
    image: postgres:15
    container_name: order-db
    env_file:
      - ./mallhive-ecommerce/docker-compose/env/order-db.env
    ports:
      - "5440:5432"
    volumes:
      - order_pgdata:/var/lib/postgresql/data
    networks:
      - order-net

  payment-service:
    container_name: payment-service
    build:
      context: ./mallhive-ecommerce/micro-services/payment-service
      dockerfile: ./mallhive-ecommerce/docker/microservices/payment.dockerfile
    env_file:
      - ./mallhive-ecommerce/micro-services/payment-service/.env
    ports:
      - "4500:4003"
    restart: always
    networks:
      - payment-net

  product-service:
    container_name: product-service
    build:
      context: ./mallhive-ecommerce/micro-services/product-service
      dockerfile: ./mallhive-ecommerce/docker/microservices/product.dockerfile
    env_file:
      - ./mallhive-ecommerce/micro-services/product-service/.env
    ports:
      - "4100:4004"
    depends_on:
      - product-db
    restart: always
    networks:
      - product-net

  product-db:
    image: postgres:15
    container_name: product-db
    env_file:
      - ./mallhive-ecommerce/docker-compose/env/product-db.env
    ports:
      - "5450:5432"
    volumes:
      - product_pgdata:/var/lib/postgresql/data
    networks:
      - product-net

  notification-service:
    container_name: notification-service
    build: 
      context: ./mallhive-ecommerce/micro-services/notification-service
      dockerfile: ./mallhive-ecommerce/docker/microservices/notification.dockerfile
    env_file:
      - ./mallhive-ecommerce/micro-services/notification-service/.env
    ports:
      - "4400:4005"
    restart: always
    networks:
      - notification-net

  recommendation-service:
    container_name: recommendation-service
    build: 
      context: ./mallhive-ecommerce/micro-services/recommendation-service
      dockerfile: ./mallhive-ecommerce/docker/microservices/recommendation.dockerfile
    env_file:
      - ./mallhive-ecommerce/micro-services/recommendation-service/.env
    ports:
      - "4700:4006"
    restart: always
    networks:
      - recommendation-net

  analytics-service:
    container_name: analytics-service
    build: 
      context: ./mallhive-ecommerce/micro-services/analytics-service
      dockerfile: ./mallhive-ecommerce/docker/microservices/analytics.dockerfile
    env_file:
      - ./mallhive-ecommerce/micro-services/analytics-service/.env
    ports:
      - "4800:4007"
    restart: always
    networks:
      - analytics-net

  shoppingcart-service:
    container_name: shoppingcart-service
    build: 
      context: ./mallhive-ecommerce/micro-services/shoppingcart-service
      dockerfile: ./mallhive-ecommerce/docker/microservices/shoppingcart.dockerfile
    env_file:
      - ./mallhive-ecommerce/micro-services/shoppingcart-service/.env
    ports:
      - "4300:4008"
    restart: always
    networks:
      - shoppingcart-net



  checkout-microfrontend:
    container_name: checkout-microfrontend
    build: 
      context: ./mallhive-ecommerce/micro-frontends/checkout
      dockerfile: ./mallhive-ecommerce/docker/microfrontends/checkout.dockerfile
    ports:
      - "3400:3000"
    restart: always
    networks:
      - checkout-net

  homepage-microfrontend:
    container_name: homepage-microfrontend
    build: 
      context: ./mallhive-ecommerce/micro-frontends/homepage
      dockerfile: ./mallhive-ecommerce/docker/microfrontends/homepage.dockerfile
    ports:
      - "3100:3000"
    restart: always
    networks:
      - homepage-net

  product-microfrontend:
    container_name: product-microfrontend
    build: 
      context: ./mallhive-ecommerce/micro-frontends/product
      dockerfile: ./mallhive-ecommerce/docker/microfrontends/product.dockerfile
    ports:
      - "3200:3000"
    restart: always
    networks:
      - product-mf-net

  shoppingcart-microfrontend:
    container_name: shoppingcart-microfrontend
    build: 
      context: ./mallhive-ecommerce/micro-frontends/shoppingcart
      dockerfile: ./mallhive-ecommerce/docker/microfrontends/shoppingcart.dockerfile
    ports:
      - "3300:3000"
    restart: always
    networks:
      - shoppingcart-mf-net

  userprofile-microfrontend:
    container_name: userprofile-microfrontend
    build: 
      context: ./mallhive-ecommerce/micro-frontends/userprofile
      dockerfile: ./mallhive-ecommerce/docker/microfrontends/userprofile.dockerfile
    ports:
      - "3500:3000"
    restart: always
    networks:
      - userprofile-net
 

volumes:
  user_pgdata:
  order_pgdata:
  product_pgdata:

networks:
  user-net:
  order-net:
  payment-net:
  product-net:
  notification-net:
  recommendation-net:
  analytics-net:
  shoppingcart-net:
  checkout-net:
  homepage-net:
  product-mf-net:
  shoppingcart-mf-net:
  userprofile-net:
